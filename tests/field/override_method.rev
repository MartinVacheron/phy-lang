// Bound methods have identity equality.
struct Foo {
    fn method(a) {
        print "method"
        print a
    }

    fn other(a) {
        print "other"
        print a
    }
}

var foo = Foo()
var method = foo.method // FIXME: Si assign, on clone la fn qui aura quand meme slef et closure

// Setting a property shadows the instance method.
foo.method = foo.other
foo.method(1)
// expect: "other"
// expect: 1

// The old method handle still points to the original method.
method(2)
// expect: "method"
// expect: 2

// Probleme parce qu'on assigne a une struct (donc borrow_mut) et on va chercher
// un de ses champs, donc on double borrow avec un borrow mut...
// Meme pb avec :
struct Foo {
    a
    b
}

var f = Foo()
f.a = f.b